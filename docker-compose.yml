version: "3.8"

networks:
    transcendence_network:
        driver: bridge

volumes:
    grafana_data:

services:
    Frontend:
        container_name: Frontend
        image: Frontend
        build: ./Frontend
        ports:
            - 443:443
        networks:
            - transcendence_network
        restart: always
    Backend:
        container_name: Backend
        image: Backend
        build: ./Backend
        networks:
            - transcendence_network
        healthcheck:
            test: "manage.py check --deploy"
        environment:
            SECRET_KEY: ${SECRET_KEY}
        restart: always
        #  In-Production
        #      - Configure with Postgress
        #      - DEBUG = False
        #      - ALLOWED_HOSTS = ["frontend"]
        #      - Redis for Channels
        #      - server static_files https://docs.djangoproject.com/en/5.0/howto/static-files/deployment/
        #      - HTTPS
    Database:
        image: postgres
        networks:
            - transcendence_network
        environment: # in env file
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /var/lib/postgresql/data
        volumes:
            - ./DB:/var/lib/postgresql/data
        restart: always
        #  In-Production
        #       - Only auth host is "backend"
    Redis:
        image: redis

    # Infrastructure Setup with ELK (Elasticsearch, Logstash, Kibana)
    elasticsearch:
        image: elasticsearch:8.13.4
        environment:
            - DISCOVERY_TYPE=single-node
        volumes:
            - elasticsearch-data:/var/lib/elasticsearch
    logstash:
        image: logstash:8.13.4
        volumes:
            - ./logstash.conf:/etc/logstash/conf.d/00-main.conf
    kibana:
        image: kibana:8.13.4
        ports:
            - 5601:5601
        depends_on:
            - elasticsearch

    # Monitoring system with Prometheus and Grafana
    prometheus:
        image: prom/prometheus:latest
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
    grafana:
        image: grafana/grafana:latest
        volumes:
            - ./grafana.ini:/etc/grafana/grafana.ini
            - grafana_data:/var/lib/grafana
        ports:
            - 3000:3000