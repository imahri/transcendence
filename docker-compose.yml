version: "3.8"

networks:
    transcendence_network:
        driver: bridge

volumes:
    grafana_data:
    elasticsearch-data:
    pgdata:
        # driver: local
        # driver_opts:
        #     o: bind
        #     type: none
        #     device: /Volumes/SamsungPro/Macos/Documents/transcendence/DB

services:
    frontend:
        container_name: frontend
        image: frontend
        build: ./Frontend
        ports:
            - 443:443
        networks:
            - transcendence_network
        restart: always
        depends_on:
            - backend
    backend:
        container_name: backend
        image: backend
        build: ./Backend
        networks:
            - transcendence_network
        healthcheck:
            test: ["./manage.py", "check", "--deploy"]
        ports:
            - 8000:8000
        environment:
            SECRET_KEY: ${SECRET_KEY}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGPASSWORD: ${POSTGRES_PASSWORD}
        restart: always
        depends_on:
            - database
            - redis
        #  In-Production
        #      - Configure with Postgress
        #      - DEBUG = False
        #      - ALLOWED_HOSTS = ["frontend"]
        #      - Redis for Channels
        #      - server static_files https://docs.djangoproject.com/en/5.0/howto/static-files/deployment/
        #      - HTTPS
    database:
        container_name: database
        image: postgres
        networks:
            - transcendence_network
        healthcheck:
            test: ["chmod", "0700", "/var/lib/postgresql/data"]
        environment: # in env file
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /var/lib/postgresql/data
        volumes:
            - pgdata:/var/lib/postgresql/data:rw
        restart: always
        #  In-Production
        #       - Only auth host is "backend"
    redis:
        container_name: redis
        image: redis
        networks:
            - transcendence_network

    # Infrastructure Setup with ELK (Elasticsearch, Logstash, Kibana)
    # elasticsearch:
    #     image: elasticsearch:8.13.4
    #     environment:
    #         - DISCOVERY_TYPE=single-node
    #     volumes:
    #         - elasticsearch-data:/var/lib/elasticsearch
    # logstash:
    #     image: logstash:8.13.4
    #     volumes:
    #         - ./logstash.conf:/etc/logstash/conf.d/00-main.conf
    # kibana:
    #     image: kibana:8.13.4
    #     ports:
    #         - 5601:5601
    #     depends_on:
    #         - elasticsearch

    # # Monitoring system with Prometheus and Grafana
    # prometheus:
    #     image: prom/prometheus:latest
    #     volumes:
    #         - ./prometheus.yml:/etc/prometheus/prometheus.yml
    #     ports:
    #         - 9090:9090
    # grafana:
    #     image: grafana/grafana:latest
    #     volumes:
    #         - ./grafana.ini:/etc/grafana/grafana.ini
    #         - grafana_data:/var/lib/grafana
    #     ports:
    #         - 3000:3000